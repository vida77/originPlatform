! function(t, e) {
	if("object" == typeof exports && "object" == typeof module) module.exports = e();
	else if("function" == typeof define && define.amd) define([], e);
	else { var r = e(); for(var i in r)("object" == typeof exports ? exports : t)[i] = r[i] }
}(this, function() {
	return function(t) {
		function e(i) { if(r[i]) return r[i].exports; var a = r[i] = { exports: {}, id: i, loaded: !1 }; return t[i].call(a.exports, a, a.exports, e), a.loaded = !0, a.exports }
		var r = {};
		return e.m = t, e.c = r, e.p = "", e(0)
	}([function(t, e, r) { t.exports = r(1) }, function(t, e) {
		function r(t, e, r) {

			    for(var i = function(t, e, r) {
					for(var i = t.append("g"), a = 0, n = [], l = [], h = 1; h < e.length; h++) {
						var o = Math.abs(e[h].x - e[h - 1].x),
							p = Math.abs(e[h].y - e[h - 1].y),
							d = Math.sqrt(Math.pow(o, 2) + Math.pow(p, 2));
						a += d, n.push(d)
					}
					for(var h = 0; h < n.length; h++) l.push(r.times * n[h] / a);
					var c = 0;
					null != r.delay && (c = r.delay);
					var f = 0;
					null != r.lineWidth && (f = r.lineWidth);
					for(var h = 0; h < n.length; h++) i.append("line").attr({ x1: e[h].x, y1: e[h].y, x2: e[h].x, y2: e[h].y }).attr("stroke-width", f).attr("stroke", r.color).transition().ease("linear").delay(c).duration(l[h]).attr({ x1: e[h].x, y1: e[h].y, x2: e[h + 1].x, y2: e[h + 1].y }), c += l[h]
				}, 
				a = function(t, e, r) {
//					console.log(t)
					for(var i = r, n = e - 1; n <= t.depth - 1; n++) i < u.max[n] + 1 && (i = u.max[n] + 1);
					for(var n = e - 1; n >= 0; n--) i < u.max[n] + 1 && (i = u.max[n] + 1);
					if(t.children.length > 0) {
						var l = e + 1,
							h = t.children,
							o = r;
						h.forEach(function(t) { o = a(t, l, o) })
					} else if(u.depth < e && (u.depth = e, u.max.length < e))
						for(var p = e - u.max.length, n = 0; n < p; n++) u.max.push(0);
					i > u.max[e - 1] && (u.max[e - 1] = i, u.max[e - 1] > u.step && (u.step = u.max[e - 1])), t.pathScale = { x: e - 1, y: i - 1 };
					for(var d = [], n = 0; n < t.children.length; n++) d.push({ y: t.children[n].pathScale.y });
					return f.push({ name: t.name, upPrice: t.upPrice, downPrice: t.downPrice, pathScale: t.pathScale, children: d ,choose:t.choose?t.choose:false}), i + 1
				},
				n = function(t) {
					
					t.append("path").attr("d", "M 0 38 V 20 A 20 20, 0, 0, 1, 20 0H 220 A 20 20, 0, 0, 1, 240 20V 38").attr("fill", "#3394d8").attr("stroke", "#196db3").attr("strokeWidth", 1).text(function(t){
						if(t.choose){
							$(this).attr('fill','#D9210D').attr("stroke","#C7161C");
						}
						
					}),
					t.append("path").attr("d", "M 240 38 V 90 A 20 20, 0, 0, 1, 220 110 H 20 A 20 20, 0, 0, 1, 0 90V 38").attr("fill", "#FFFFFF").attr("stroke", "#196db3").attr("strokeWidth", 1).text(function(t){
						if(t.choose){
							$(this).attr('fill','#fff').attr("stroke","#C7161C");
						}
						
					}),
					t.append("text").attr("x", "115").attr("y", "25").attr("font-size", "13px").attr("font-family", "微软雅黑").attr("text-anchor", "middle").attr("fill", "#fff").text(function(t) {/*console.log(t);*/ return t.name }),
					t.append("image").attr("width", "30").attr("height", "30").attr("x", -17).attr("y", 38).attr("xlink:href", function(t) {
						if(t.choose){
							return u.imageCityRed 	
						}else{
							return u.imageCity 
						}
						
					});
					p(e.downPrice), p(e.upPrice);
					t.append("image").attr("width", "18").attr("height", "14").attr("x", "30").attr("y", "50").attr("xlink:href", u.imageDown),
					t.append("text").attr("x", "65").attr("y", "64").attr("font-size", "14px").attr("font-family", "微软雅黑").attr("text-anchor", "start").attr("fill", "#fe8401").text(function(t) { return null != t.downPrice ? p(t.downPrice) : "---" }),
					t.append("image").attr("width", "18").attr("height", "14").attr("x", "30").attr("y", "78").attr("xlink:href", u.imageUp),
					t.append("text").attr("x", "65").attr("y", "92").attr("font-size", "14px").attr("font-family", "微软雅黑").attr("text-anchor", "start").attr("fill", "#196db3").text(function(t) { return null != t.upPrice ? p(t.upPrice) : "---" })
				}, 
				l = function(t, e) {
					for(var r in e) e[r] instanceof Array ? (t[r] = [], arguments.callee(t[r], e[r])) : e[r] instanceof Element ? t[r] = e[r] : null == e[r] ? t[r] = null : "object" == typeof e[r] ? (t[r] = {}, arguments.callee(t[r], e[r])) : t[r] = e[r] }, h = function(t, e) {
					if(t.children.length > 0) {
						var r = e,
							i = t.children;
						i.forEach(function(t) {
							var i = h(t, e + 1);
							i > r && (r = i)
						}), t.depth = r
					} else t.depth = e;
					return t.depth
				}, 
				o = function(t) {
					if(t.children.length > 0) {
						var e = t.children;
						e.sort(function(t, e) { return e.depth > t.depth }), e.forEach(function(t) { o(t) })
					}
				},
				p = function(t) {
					if(null == t) return null;
					var e = String(t);
					if(e.indexOf(".") != -1) {
						var r = e.split("."),
							i = r[0].split("");
						i.reverse();
						for(var a = i.length - 1; a >= 1; a--) i[3 * a] && i.splice(3 * a, 0, ",");
						return i.reverse(), i.join("") + "." + r[1]
					}
					var i = e.split("");
					i.reverse();
					for(var a = i.length - 1; a >= 1; a--) i[3 * a] && i.splice(3 * a, 0, ",");
					return i.reverse(), i.join("")
				}, 
				d = function(t, e) {
					console.log(e)
					var r = t.selectAll("g").data(e).enter().append("g").attr("opacity", 0).attr("transform", function(t) { return "translate(" + (t.pathScale.x * u.itemWidth + 20) + "," + (t.pathScale.y * u.itemHeight + 10) + ")" });
					console.log(r[0])
					n(r);
					var a = t.selectAll(".links").data(e).enter().append("g").filter(function(t, e, r) { return 0 != t.children.length }).attr("transform", function(t) { 
						return "translate(" + (t.pathScale.x * u.itemWidth + 20) + "," + (t.pathScale.y * u.itemHeight + 10) + ")" });
					r.transition().duration(u.transitionTargetTime).delay(function(t, e) { return t.pathScale.x * u.intervalTime }).attr("opacity", 1);
					var l = 55,
						h = 240,
						o = u.itemWidth - 17,
						p = 20;
					a.filter(function(t, e, r) {
						
						for(var a = 0; a < t.children.length; a++) {
							var n = t.children[a].y - t.pathScale.y;
							0 != a ? i(d3.select(this), [{ x: h + p, y: l }, { x: h + p, y: l + n * u.itemHeight }, { x: o, y: l + n * u.itemHeight }], { times: u.transitionTime, color: "#00beff", delay: t.pathScale.x * u.intervalTime, lineWidth: 1.5 }) : i(d3.select(this), [{ x: h, y: l + n * u.itemHeight }, { x: o, y: l + n * u.itemHeight }], { times: u.transitionTime, color: "#00beff", delay: t.pathScale.x * u.intervalTime, lineWidth: 1.5 })
						}
						return !1
					})
				}, c = [], f = [], s = 0; s < e.length; s++) {
				var m = {};
				l(m, e[s]), c.push(m)
			}
			var u = { height: 1e3, width: 1e3, margin: 10, depth: 0, step: 0, max: [0], itemWidth: 350, itemHeight: 150, transitionTargetTime: 800, transitionTime: 1e3, intervalTime: 1e3, imageCity: "../images/city.png",imageCityRed:"../images/cityRed.png", imageUp: "../images/upArrow.png", imageDown: "../images/downArrow.png", backgroundColor:"red"};
			null != r.imageCity && (u.imageCity = r.imageCity), null != r.imageUp && (u.imageUp = r.imageUp), null != r.imageCityRed && (u.imageCityRed = r.imageCityRed), null != r.imageDown && (u.imageDown = r.imageDown), null != r.itemWidth && (u.itemWidth = r.itemWidth), null != r.itemHeight && (u.itemHeight = r.itemHeight);
			console.log(c)
			for(var s = 0; s < c.length; s++) h(c[s], 1);
			for(var s = 0; s < c.length; s++) o(c[s]);
			for(var s = 0; s < c.length; s++) a(c[s], 1, 1);
			
			u.height = u.itemHeight * u.step - 20, u.width = u.itemWidth * u.depth - 40, $(t).empty();
			var g = document.createElement("DIV");
			$(g).css({ height: u.height + "px", width: u.width + "px", margin: u.margin + "px", "-moz-user-select": "none", "-webkit-user-select": "none", "user-select": "none" }), t.appendChild(g);
			var x = d3.select(g).append("svg").attr("width", u.width).attr("height", u.height),
				y = x.append("g");
				console.log(f)
			d(y, f)
		}
		window.createTreeCharts = r
	}])
});